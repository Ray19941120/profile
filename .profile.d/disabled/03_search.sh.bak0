#!/bin/bash
FIND_EXCLUDE="-not -path *.svn* -and -not -path *.git"
GREP_EXCLUDE="\.git\|\.svn"

# Find functions
alias ff='NAME=name _ff'
alias iff='NAME=iname _ff'
function _ff() {
  set -f
  if [ -d "$2" ]; then 
    DIR="$2"; OPTS="${@:3}"
  else
    DIR="./"; OPTS="${@:2}"
  fi
  NAMES="-$NAME $(sed -e 's/|/ -o -'$NAME' /g' <<< $1)"
  find "$DIR" \( $NAMES \) -and $FIND_EXCLUDE $OPTS
  set +f
}

function ffo() {
  ff "$@" -execdir sh -c '\
  ${VISUAL} "${FILE}" {}; \
  sleep 0.1s' \;
}

# Search functions
alias gg='NAME=name _gg'
alias igg='NAME=iname _gg'
function _gg() {
  set -f
  if [ -d "${!#}" ]; then 
    OPTS="${@:1:$(($#-2))}"; FF="${@: -2:2}"
  else
    OPTS="${@:1:$(($#-1))}"; FF="${!#}"
  fi
  NAME=$NAME _ff $FF -type f | xargs grep -n --color $OPTS
  set +f
}

#function ggo() {
#  ff "${!#}" | xargs grep -l "${@:1:$(($#-1))}" | sh -c '\
#  ${VISUAL} -; \
#  sleep 0.1s' \;
#}

# Search function helpers
function h()  { gg -i "${1}" "*.h|*.hpp" "${@:2}"; }
function c()  { gg -i "${1}" "*.c|*.cpp|*.cc" "${@:2}"; }
function hc() { gg -i "${1}" "*.c|*.cpp|*.cc|*.h|*.hpp" "${@:2}"; }
function py() { gg -i "${1}" "*.py" "${@:2}"; }
function mk() { gg -i "${1}" "*.mk|Makefile" "${@:2}"; }
function sh() { gg -i "${1}" "*.sh" "${@:2}"; }
function ref(){ gg -i "${1}" "*.c|*.cpp|*.cc|*.h|*.hpp|*.py|*.mk|Makefile|*.sh" "${@:2}"; }

# Safe find & replace
function hh()
{
  set -f
  EXCLUDE="$FIND_EXCLUDE -not -type l -and -not -path '*obj*'"
  SEDOPT="${@:1:$(($#-3))}"
  IN="${@: -3:1}"; IN="${IN//\//\/}"
  OUT="${@: -2:1}"
  #echo "Replace '$IN' by '$OUT' in files '${!#}' from directory '$DIR'?"
  #echo "Press enter or Ctrl-C" ; read
  ff "${!#}" -type f $EXCLUDE -execdir sed $SEDOPT "s/$IN/$OUT/g" {} \;
  set +f
}

# diff directories
function diffd() {
  diff -qr "$@" | grep -v -e $GREP_EXCLUDE
}
